echo "🔍 EXECUTING PENETRATION TEST SUITE - LINUX/DOCKER ENVIRONMENT"
echo "================================================================"

# TEST 1: SERVICE DISCOVERY & PORT SCANNING
echo ""
echo "🎯 TEST 1: NETWORK RECONNAISSANCE"
echo "================================="

echo "Active Docker containers:"
docker ps --format "table {{.Names}}\t{{.Ports}}\t{{.Status}}"

echo ""
echo "Port scanning critical services:"
nmap -sS -O localhost -p 5432,6379,8080,8081,15432,16379 2>/dev/null || {
    echo "nmap not available, using nc for port scan:"
    for port in 5432 6379 8080 8081 15432 16379; do
        nc -zv localhost $port 2>&1 | grep -E "(succeeded|open)"
    done
}

# TEST 2: DATABASE SECURITY ASSESSMENT
echo ""
echo "🔒 TEST 2: DATABASE SECURITY ASSESSMENT"
echo "======================================="

echo "Testing PostgreSQL (5432) - Main instance:"
timeout 3 psql -h localhost -p 5432 -U postgres -d postgres -c "SELECT version();" 2>&1 | head -2

echo "Testing PostgreSQL (15432) - Docker instance:"
timeout 3 psql -h localhost -p 15432 -U postgres -d postgres -c "SELECT version();" 2>&1 | head -2

echo "Testing Redis (6379) - Main instance:"
timeout 3 redis-cli -h localhost -p 6379 ping 2>&1

echo "Testing Redis (16379) - Docker instance:"
timeout 3 redis-cli -h localhost -p 16379 ping 2>&1

# TEST 3: APPLICATION SECURITY TESTING
echo ""
echo "🛡️ TEST 3: APPLICATION SECURITY TESTING"
echo "========================================"

echo "Testing Gateway endpoint (if running):"
curl -s -I http://localhost:8080/actuator/health 2>/dev/null | head -3 || echo "Gateway not responding on 8080"

echo "Testing Auth-Service endpoint (if running):"
curl -s -I http://localhost:8081/actuator/health 2>/dev/null | head -3 || echo "Auth-Service not responding on 8081"

# TEST 4: AUTHENTICATION BYPASS ATTEMPTS
echo ""
echo "🚨 TEST 4: AUTHENTICATION BYPASS ATTEMPTS"
echo "=========================================="

echo "Attempting direct Auth-Service access:"
curl -s -X POST http://localhost:8081/auth/login \
  -H "Content-Type: application/json" \
  -d '{"username":"admin","password":"wrongpassword"}' \
  2>/dev/null | jq . 2>/dev/null || echo "Direct auth access test failed or jq not available"

# TEST 5: SQL INJECTION ATTEMPTS
echo ""
echo "💉 TEST 5: SQL INJECTION TESTING"
echo "================================"

echo "Testing SQL injection via auth endpoints:"
curl -s -X POST http://localhost:8081/auth/login \
  -H "Content-Type: application/json" \
  -d '{"username":"admin'\''OR 1=1--","password":"test"}' \
  2>/dev/null | head -3 || echo "SQL injection test endpoint not available"

# TEST 6: DOCKER CONTAINER SECURITY
echo ""
echo "🐳 TEST 6: DOCKER CONTAINER SECURITY"
echo "===================================="

echo "Docker container privileges check:"
docker inspect spring-mono-postgres-1 spring-mono-redis-1 postgres-staging redis-staging \
  --format '{{.Name}}: Privileged={{.HostConfig.Privileged}}, User={{.Config.User}}' 2>/dev/null

echo "Docker network security:"
docker network ls
docker network inspect bridge --format '{{.Name}}: {{.Options}}' 2>/dev/null



# Eseguiamo il penetration test
bash -c "
echo '🔍 EXECUTING PENETRATION TEST SUITE - LINUX/DOCKER ENVIRONMENT'
echo '================================================================'

# TEST 1: SERVICE DISCOVERY & PORT SCANNING
echo ''
echo '🎯 TEST 1: NETWORK RECONNAISSANCE'
echo '================================='

echo 'Active Docker containers:'
docker ps --format 'table {{.Names}}\t{{.Ports}}\t{{.Status}}'

echo ''
echo 'Port scanning critical services:'
for port in 5432 6379 8080 8081 15432 16379; do
    nc -zv localhost \$port 2>&1 | grep -E '(succeeded|open)' || echo \"Port \$port: CLOSED or FILTERED\"
done
"