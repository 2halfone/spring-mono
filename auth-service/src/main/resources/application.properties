# Application Configuration
spring.application.name=auth-service
server.port=8080

# JWT Configuration (Environment-based secrets)
jwt.secret=${JWT_SECRET:mySecretKey123456789012345678901234567890}
jwt.expiration-ms=${JWT_EXPIRATION_MS:86400000}
jwt.issuer=${JWT_ISSUER:spring-microservices}

# Database Configuration (Environment-based credentials)
# PostgreSQL for production/staging (uses environment variables from Docker)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;MODE=PostgreSQL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:sa}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}

# JPA / Hibernate Configuration - Dynamic based on database type
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_DDL_AUTO:create-drop}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
spring.jpa.defer-datasource-initialization=true

# Database initialization - Only run data.sql after Hibernate creates tables
spring.sql.init.mode=always

# Hibernate will auto-detect dialect based on database URL
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# Assicura binding su IPv4 e IPv6
server.address=0.0.0.0
