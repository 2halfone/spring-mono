name: build-and-deploy
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - auth-service
          - chat-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login al registry GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Rendi eseguibile mvnw per ${{ matrix.service }}
        run: chmod +x ${{ matrix.service }}/mvnw

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Test & package ${{ matrix.service }}
        working-directory: ${{ matrix.service }}
        run: ./mvnw -B verify

      - name: Build & push image for ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/github_deploy_key
          chmod 600 ~/.ssh/github_deploy_key

      - name: Detailed SSH debug + deploy
        run: |
          ssh -vvv -i ~/.ssh/github_deploy_key \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -o ConnectTimeout=10 \
            ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << 'EOF'
echo "Connected as $(whoami) on $(hostname)"
echo "Listing authorized_keys:"
ls -l ~/.ssh/authorized_keys && cat ~/.ssh/authorized_keys
echo "Docker compose status:"
cd ~/spring-boot-template
docker compose ps
echo "Pull & restart:"
docker compose pull
docker compose up -d --remove-orphans
EOF
