name: build-auth-and-deploy
on:
  push:
    branches: [ main ]

env:
  IMAGE: ghcr.io/${{ github.repository_owner }}/auth-service:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login al registry GitHub Container
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCRTOKEN }}
      - name: Rendi eseguibile mvnw
        run: chmod +x auth-service/mvnw
      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '21' }
      - name: Test & package
        working-directory: auth-service
        run: ./mvnw -B verify
      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: auth-service
          push: true
          tags: ${{ env.IMAGE }}
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - uses: actions/checkout@v4
      - name: Scrivi DEPLOY_KEY su file
        run: |
          mkdir -p /home/runner/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > /home/runner/.ssh/id_rsa
          chmod 600 /home/runner/.ssh/id_rsa

      - name: Elenca la cartella SSH
        run: ls -l /home/runner/.ssh

      - name: Test SSH key locally
        run: |
          ssh -i /home/runner/.ssh/id_rsa \
              -o StrictHostKeyChecking=no \
              -o UserKnownHostsFile=/dev/null \
              -o BatchMode=yes \
              frazerfrax1@${{ secrets.DEPLOY_HOST }} echo "SSH OK"

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1
        with:
          host:              ${{ secrets.DEPLOY_HOST }}
          port:              22
          username:          ${{ secrets.DEPLOY_USER }}
          key_path:          /home/runner/.ssh/id_rsa
          passphrase:        ${{ secrets.DEPLOY_PASSPHRASE }}
          script: |
            cd /srv/spring-mono
            docker compose pull
            docker compose up -d --remove-orphans
        env:
          STRICT_HOST_KEY_CHECKING: "no"
